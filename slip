#! /bin/bash

set -eo pipefail

DMENU_OPTS="screenshot
record
nothing"
DMENU_RECORD_OPTS="stop
nothing"
DMENU_PROMPT="slip >"
DMENU_CMD="dmenu -f -i -dim 0.5 -h 17 -p slip -fn gohup -w 2560 -y 712.5 -nb #c3bea1 -nf #787564 -sb #787564 -sf #c3bea1"
RECORD_PIDFILE="$HOME/temp/slip_pidrecord"

function usage() {
    echo ""
    echo "slip [ -h | -v ]"
    echo "  Uploads images taken with ffmpeg via slop to imgur."
    echo "  And also quick video recording"
    echo "  That's all."
    echo ""
    echo "  -h  show this help"
    echo "  -v  show version"
    echo ""
}

function curl_imgur() {
    curl -sH "Authorization: Client-ID 1923eac1555838e" "$@"
}

function upload() {
    file="$1"

    if [ -f "$file" ]; then
        curl_imgur -F "image=@$file" "https://api.imgur.com/3/upload"
    else
        echo "File does not exist, what happened?"
    fi
}

function slop_geom() {
    slop | sed -n 5p | sed -e s/G=// -e s/+/\|/ -e s/+/,/
}

# 1920x1080
# +500+500
# imgur.com/3341uaB
# this should never happen

function parse() {
    if [ "$1" = "geometryx" ]; then
        awk -F"|" '{ print $1 }' <<< "$2" 
    elif [ "$1" = "geometry+" ]; then
        awk -F"|" '{ print $2 }' <<< "$2"
    elif [ "$1" = "imgur" ]; then
        sed -e 's/.*\"link\":"\([^"]*\).*/\1/' -e 's/\\//g' <<< "$2"
    fi
}

function shot() {
    if [ "$1" = "image" ]; then
        extension=".png"    # img-2016-16-04-153906.png
        filename="/home/toqoz/Pictures/img-`date +%Y-%d-%m-%H%M%S`$extension"    # .png, .jpg
        ffmpeg -f x11grab -video_size "$2" -i "$DISPLAY+$3" -vframes 1 $filename &> /dev/null
    elif [ "$1" = "video" ]; then
        extension=".mkv"    # vid-2016-16-04-153906.mkv
        filename="/home/toqoz/Videos/vid-`date +%Y-%d-%m-%H%M%S`$extension"    # .mkv, .mp4
        ffmpeg -f x11grab -video_size "$2" -framerate 60 -i "$DISPLAY+$3" -c:v libx264 -preset ultrafast $filename &> /dev/null &
        echo "$!" > "$RECORD_PIDFILE"
    fi
}

function remove() {
    rm ~/Pictures/"$filename"
}

function main() {
    if [ "$1" = "screenshot" ]; then
        # Run slop and get geometry from it.
        geometry=$(slop_geom)
        # Parse geometry.
        wxh=$(parse "geometryx" $geometry)
        off=$(parse "geometry+" $geometry)
        # Take the shot.
        shot "image" "$wxh" "$off"
        # Parse imgur json into link.
        output=$(upload "$filename")
        url=$(parse "imgur" "$output")
        # Delete the file.
        # remove
        echo "$url"
    elif [ "$1" = "record" ]; then
        geometry=$(slop_geom)
        wxh=$(parse "geometryx" $geometry)
        off=$(parse "geometry+" $geometry)
        shot "video" "$wxh" "$off"
    elif [ "$1" = "stop" ]; then
        # Get pid of ffmpeg process.
        local pid
        pid=$(cat "$RECORD_PIDFILE")
        # Kill ffmpeg (stopping the recording.)
        kill $pid
        # Remove the pid file so that slip can be used as normal again.
        rm "$RECORD_PIDFILE"
        exit 0
    else
        exit 0
    fi
}

type curl >/dev/null 2>/dev/null || {
    echo "Curl is required." >&2
    exit 1
}

if [ "$1" = "-h" -o "$1" = "--help" ]; then
    usage
    exit 0
elif [ "$1" = "-v" -o "$1" = "--version" ]; then
    echo "Version: $version"
    exit 0
elif [ $# == 0 ]; then
    if [ -a "$RECORD_PIDFILE" ]; then
        main $($DMENU_CMD <<< "$DMENU_RECORD_OPTS")
    else
        main $($DMENU_CMD <<< "$DMENU_OPTS")
    fi
fi
