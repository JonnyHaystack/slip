#! /bin/bash

function usage() {
    echo ""
    echo "slip [ -h | -v ]"
    echo "  Uploads images taken with ffmpeg via slop to imgur."
    echo "  And also screencasts."
    echo "  That's all."
    echo ""
    echo "  -h  show this help"
    echo "  -v  show version"
    echo ""
}

function curl_imgur() {
    curl -sH "Authorization: Client-ID 1923eac1555838e" "$@"
}

function upload() {
    file="$1"

    if [ -f "$file" ]; then
        curl_imgur -F "image=@$file" "https://api.imgur.com/3/upload"
    else
        echo "File does not exist, what happened?"
    fi
}

function slop_geom() {
    slop | sed -n 5p | sed -e s/G=// -e s/+/\|/ -e s/+/,/
}

function parse() {
    # 1920x1080
    if [ "$1" = "geometryx" ]; then
        awk -F"|" '{ print $1 }' <<< "$2" 
    # +500+500
    elif [ "$1" = "geometry+" ]; then
        awk -F"|" '{ print $2 }' <<< "$2"
    # imgur.com/3341uaB
    elif [ "$1" = "imgur" ]; then
        sed -e 's/.*\"link\":"\([^"]*\).*/\1/' -e 's/\\//g' <<< "$2"
    # this should never happen
    else
        echo "What gives?"
        exit 1
    fi
}

function shot() {
    extension=".png"    # 2016-16-04-153906.png
    filename="`date +%Y-%d-%m-%H%M%S`$extension"    # .png, .jpg
    ffmpeg -f x11grab -video_size "$1" -i "$DISPLAY+$2" -vframes 1 $filename &> /dev/null
}

function remove() {
    rm ~/code/shell/slip/"$filename"
}

function main() {
    # Run slop and get geometry from it.
    geometry=$(slop_geom)
    # Parse geometry.
    wxh=$(parse "geometryx" $geometry)
    off=$(parse "geometry+" $geometry)
    # Take the shot.
    shot "$wxh" "$off"
    # Parse imgur json into link.
    output=$(upload "$filename")
    url=$(parse "imgur" "$output")
    # Delete the file.
    remove
    echo "the link should be: $url"
}

type curl >/dev/null 2>/dev/null || {
    echo "Curl is required." >&2
    exit 1
}

if [ "$1" = "-h" -o "$1" = "--help" ]; then
    usage
    exit 0
elif [ "$1" = "-v" -o "$1" = "--version" ]; then
    echo "Version: $version"
    exit 0
elif [ $# == 0 ]; then
    main
fi
